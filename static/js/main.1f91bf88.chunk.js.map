{"version":3,"sources":["components/Timeline.tsx","components/About.tsx","components/NavBar.tsx","components/Works.tsx","components/Interests.tsx","components/Skills.tsx","components/SkillsAndInterests.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/WorkDetail.tsx"],"names":["useStyles","makeStyles","theme","oneLine","display","justifyContent","oneLineContent","textAlign","oneLineContentImg","alignItems","appLink","color","circle","borderRadius","background","margin","breakpoints","down","width","height","up","OneLine","props","classes","Box","p","className","Grid","container","spacing","item","xs","Typography","variant","yearHeader","mainHeader","description","AboutLines","aboutList","Object","entries","aboutTemplate","value","about","push","YearHeader","MainHeader","Description","Timeline","About","id","align","Navbar","AppBar","position","style","Toolbar","activeClass","to","spy","smooth","offset","duration","Button","root","maxWidth","modal","paper","backgroundColor","palette","border","boxShadow","shadows","padding","worksList","ret","workTemplate","work","tempwork","Name","OverView","ImgPath","process","ImgName","Technology","WorkOverview","count","renderWorkItems","renderWorkItem","index","data","handleOpen","List","ListItem","onClick","event","ListItemLink","ListItemAvatar","Avatar","src","alt","title","ListItemText","primary","secondary","button","component","Works","React","useState","open","setOpen","selectedIndex","setSelectedIndex","WorkDetail","handleClose","icon","fontSize","InterestsDescription","interestsList","interestTemplate","interestType","descList","Card","CardContent","Interests","SkillsDescription","skillsList","skillTemplate","skillType","Skills","skillAndInterestArea","SkillsAndInterests","App","NavBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","DialogTitle","withStyles","createStyles","closeButton","right","top","grey","children","onClose","other","disableTypography","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","WorksTechnology","worksTechnologies","console","log","__dirname","aria-labelledby","dividers","gutterBottom","autoFocus"],"mappings":"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","file":"static/js/main.1f91bf88.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport aboutTemplate from \"../assets/about_template.json\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  oneLine: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // paddingLeft: \"15%\",\n    // paddingRight: \"15%\",\n  },\n  oneLineContent: {\n    textAlign: \"left\",\n  },\n  oneLineContentImg: {\n    textAlign: \"right\",\n    alignItems: \"center\",\n  },\n  appLink: {\n    color: \"#61dafb\",\n  },\n\n  circle: {\n    borderRadius: \"100%\",\n    background: \"skyblue\",\n    margin: \"10px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"50px\",\n      height: \"50px\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100px\",\n      height: \"100px\",\n    },\n  },\n}));\n\n// useMediaQuery hookを用いてレスポンシブデザインに対応するのもありか\n\n// function SimpleMediaQuery() {\n//   const matches = useMediaQuery(\"screen and (min-width:600px)\");\n//   return (\n//     <div>\n//       {`(min-width:600px) matches: ${matches}`}\n//     </div>\n//   );\n// }\n\ninterface IOneLine {\n  yearHeader: string;\n  mainHeader: string;\n  description: string;\n}\n\nconst OneLine = (props: IOneLine) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Box p={2} className={classes.oneLine}>\n        <Grid container spacing={3}>\n          <Grid item xs={4} className={classes.oneLineContentImg}>\n            <div className={classes.circle}></div>\n          </Grid>\n          <Grid item xs={8} className={classes.oneLineContent}>\n            <Typography variant=\"h5\">\n              <b>{props.yearHeader}</b>\n            </Typography>\n            <Typography variant=\"h5\">\n              <b>{props.mainHeader}</b>\n            </Typography>\n            {props.description}\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AboutLines = () => {\n  let aboutList = [];\n\n  // check about size\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (let [aboutProp, value] of Object.entries(aboutTemplate)) {\n    for (let about of value) {\n      aboutList.push(\n        <Fragment>\n          <li>\n            <OneLine\n              yearHeader={about.YearHeader}\n              mainHeader={about.MainHeader}\n              description={about.Description}\n            />\n          </li>\n        </Fragment>\n      );\n    }\n  }\n  return <Fragment>{aboutList}</Fragment>;\n};\n\nconst Timeline: React.FC = () => {\n  return (\n    <Fragment>\n      <Box display=\"flex\" justifyContent=\"center\">\n        <ul>\n          <AboutLines />\n        </ul>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Timeline;\n","import React, { Fragment } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Timeline from \"./Timeline\";\n\nconst About: React.FC = () => {\n  return (\n    <Fragment>\n      <Box p={2}>\n        <Box display=\"flex\" justifyContent=\"center\" p={1} id={\"About\"}>\n          <Typography variant=\"h3\">About</Typography>\n        </Box>\n        簡単な経歴\n        <Box display=\"flex\" justifyContent=\"center\" p={1}>\n          <Typography variant=\"body1\" align=\"left\"></Typography>\n        </Box>\n      </Box>\n      <Timeline />\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { Fragment } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-scroll\";\n\nconst Navbar: React.FC = () => {\n  return (\n    <Fragment>\n      <AppBar\n        color=\"default\"\n        position=\"sticky\"\n        style={{ alignItems: \"center\" }}\n      >\n        <Toolbar>\n          <Link\n            activeClass=\"active\"\n            to=\"About\"\n            spy={true}\n            smooth={true}\n            offset={-70}\n            duration={500}\n          >\n            <Button color=\"inherit\">ABOUT</Button>\n          </Link>\n          <Link\n            activeClass=\"active\"\n            to=\"Skills\"\n            spy={true}\n            smooth={true}\n            offset={-70}\n            duration={500}\n          >\n            <Button color=\"inherit\">SKILLS & INTEREST</Button>\n          </Link>\n          <Link\n            activeClass=\"active\"\n            to=\"Works\"\n            spy={true}\n            smooth={true}\n            offset={-70}\n            duration={500}\n          >\n            <Button color=\"inherit\">Works</Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport workTemplate from \"../assets/works_template.json\";\nimport { WorkDetail } from \"./WorkDetail\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 770,\n    maxWidth: \"100%\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\ntype Work = {\n  Name: string;\n  OverView: string;\n  Description: string;\n  ImgPath: string;\n  Technology: string[];\n};\n\nconst worksList = (() => {\n  let ret: Work[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (let [workProp, value] of Object.entries(workTemplate)) {\n    for (let work of value) {\n      let tempwork: Work = {\n        Name: work.Name,\n        OverView: work.OverView,\n        Description: work.Description,\n        ImgPath: `${process.env.PUBLIC_URL}/assets/img/${work.ImgName}`,\n        Technology: work.Technology,\n      };\n      ret.push(tempwork);\n    }\n  }\n  return ret;\n})();\n\nconst WorkOverview = (props: any) => {\n  // let worksList = [];\n  const classes = useStyles();\n  let count = 0;\n  let renderWorkItems = [];\n  for (let work of worksList) {\n    renderWorkItems.push(\n      renderWorkItem({ index: count, data: work, handleOpen: props.handleOpen })\n    );\n    count++;\n  }\n\n  return (\n    <Fragment>\n      <Box display=\"flex\" justifyContent=\"center\" p={1}>\n        <List className={classes.root}>{renderWorkItems}</List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst renderWorkItem = (props: any) => {\n  const { index, data, handleOpen } = props;\n  return (\n    <Fragment>\n      <ListItem\n        onClick={(event) => {\n          handleOpen(event, index);\n        }}\n        key={index}\n      >\n        <ListItemLink>\n          <ListItemAvatar>\n            <Avatar>\n              <img\n                src={`${data.ImgPath}`}\n                alt=\"海の写真\"\n                title=\"空と海\"\n                width=\"100%\"\n                height=\"auto\"\n              ></img>\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={data.Name} secondary={data.OverView} />\n        </ListItemLink>\n      </ListItem>\n    </Fragment>\n  );\n};\n\nfunction ListItemLink(props: ListItemProps<\"a\", { button?: true }>) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nconst Works: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number\n  ) => {\n    setSelectedIndex(index);\n    setOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <Box p={2}>\n        <Box display=\"flex\" justifyContent=\"center\" p={1} id={\"Works\"}>\n          <Typography variant=\"h3\">Works</Typography>\n        </Box>\n        <WorkOverview handleOpen={handleOpen} />\n        <WorkDetail\n          handleClose={handleClose}\n          open={open}\n          index={selectedIndex}\n          data={worksList}\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Works;\n","import React, { Fragment } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport interestTemplate from \"../assets/interests_template.json\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    // maxWidth: \"100%\",\n  },\n  icon: {\n    padding: \"10px\",\n    fontSize: \"90px\",\n    backgroundColor: \"skyblue\",\n    borderRadius: \"100%\",\n  },\n});\n\nconst InterestsDescription: React.FC = () => {\n  let interestsList = [];\n  const classes = useStyles();\n\n  for (let [interestType, value] of Object.entries(interestTemplate)) {\n    let descList = \"/\";\n    for (let description of value) {\n      descList += ` ${description} / `;\n    }\n    interestsList.push(\n      <Box display=\"flex\" justifyContent=\"center\" p={1}>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant=\"h6\">{interestType}</Typography>\n            <Typography color=\"textSecondary\">{descList}</Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    );\n  }\n  return <Fragment>{interestsList}</Fragment>;\n};\n\nconst Interests: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Box p={2}>\n        <Box display=\"flex\" justifyContent=\"center\" p={1} id={\"Interests\"}>\n          <Typography variant=\"h3\">Interests</Typography>\n        </Box>\n        <ComputerIcon className={classes.icon} />\n        <InterestsDescription />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Interests;\n","import React, { Fragment } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport skillTemplate from \"../assets/skills_template.json\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    // maxWidth: \"100%\",\n  },\n  icon: {\n    padding: \"10px\",\n    fontSize: \"90px\",\n    backgroundColor: \"skyblue\",\n    borderRadius: \"100%\",\n  },\n});\n\nconst SkillsDescription: React.FC = () => {\n  let skillsList = [];\n  const classes = useStyles();\n\n  for (let [skillType, value] of Object.entries(skillTemplate)) {\n    let descList = \"/\";\n    for (let description of value) {\n      descList += ` ${description} / `;\n    }\n    skillsList.push(\n      <Box display=\"flex\" justifyContent=\"center\" p={1}>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant=\"h6\">{skillType}</Typography>\n            <Typography color=\"textSecondary\">{descList}</Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    );\n  }\n  return <Fragment>{skillsList}</Fragment>;\n};\n\nconst Skills: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Box p={2}>\n        <Box display=\"flex\" justifyContent=\"center\" p={1} id={\"Skills\"}>\n          <Typography variant=\"h3\">Skills</Typography>\n        </Box>\n        <ComputerIcon className={classes.icon} />\n\n        <SkillsDescription />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Skills;\n","import { makeStyles, Theme } from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\n\nimport Interests from \"./Interests\";\nimport Skills from \"./Skills\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  skillAndInterestArea: {\n    [theme.breakpoints.down(\"sm\")]: {},\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nconst SkillsAndInterests: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <span className={classes.skillAndInterestArea}>\n        <Skills />\n        <Interests />\n      </span>\n    </Fragment>\n  );\n};\n\nexport default SkillsAndInterests;\n","import React from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\n\nimport NavBar from \"./components/NavBar\";\nimport Works from \"./components/Works\";\nimport SkillsAndInterests from \"./components/SkillsAndInterests\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <About />\n      <SkillsAndInterests />\n      <Works />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Fragment } from \"react\";\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst WorksTechnology = (props: any) => {\n  let worksTechnologies = [];\n  for (let data of props.data) {\n    worksTechnologies.push(<li>{data}</li>);\n  }\n  return (\n    <Fragment>\n      使用技術\n      <ul>{worksTechnologies}</ul>\n    </Fragment>\n  );\n};\n\nexport const WorkDetail = (props: any) => {\n  console.log(__dirname);\n\n  return (\n    <Fragment>\n      <Dialog\n        onClose={props.handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={props.open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n          {props.index !== -1 ? props.data[props.index].Name : \"Error\"}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Box p={2} display=\"flex\" justifyContent=\"center\">\n            {props.index !== -1 ? (\n              <img\n                src={`${props.data[props.index].ImgPath}`}\n                alt=\"海の写真\"\n                title=\"空と海\"\n                width=\"70%\"\n                height=\"auto\"\n              ></img>\n            ) : (\n              \"\"\n            )}\n          </Box>\n          <Box p={2}>\n            <Typography gutterBottom>\n              {props.index !== -1 ? props.data[props.index].Description : \"\"}\n            </Typography>\n          </Box>\n          <Box p={2}>\n            {props.index !== -1 ? (\n              <WorksTechnology data={props.data[props.index].Technology} />\n            ) : (\n              \"\"\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={props.handleClose} color=\"primary\">\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}